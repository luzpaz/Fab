#!/usr/bin/env bash

# This shell script converts the JSON file (.json) and associated STEP (.stp) files generated by
# Fab Project into FreeCAD document files (.FCStd).  It addition, it generates CNC G code files
# (.nc) if the `--cnc` (or `-c`) option is specified.  If the `--visual` (or `-v`) option is
# specified, the documents are read into FreeCAD for visualization purposes.
#
# Usage:
#     cq2fc [-v|--visual] [-c|-cnc] FAB.json"
#
# where:
#     -v|--visual specifies visual mode.
#     -c|--cnc specifies the CNC mode.
#     FAB.json specifies the JSON file to use.
#
# It is further assumed that the requried STEP files are in the same directory as the JSON file.

# Get the directory that contains this script file:
# [Get Script Directory](https://dirask.com/posts/Bash-get-current-script-directory-path-1X9E8D)
SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )

# Parse command line arguments:
# [Parse](https://stackoverflow.com/questions/192249/how-do-i-parse-command-line-arguments-in-bash)
FLAGS=""
VISUAL=""
CNC=""
JSON=""
while [[ $# -gt 0 ]]; do
    case "$1" in
	-c|--cnc)
	    CNC="$1"
            FLAGS+="c"
	    shift
	    ;;
	-v|--visual)
	    VISUAL="$1"
	    FLAGS+="v"
	    shift
	    ;;
	*.json)
	    if [[ "${JSON}" != "" ]]; then
		echo "Two JSON files specified '${JSON}' '$1'"
	    fi
	    JSON="$1"
	    shift
	    ;;
	*)
	    echo "Unexpected argument $1"
	    shift
	    ;;
    esac
done

# Do argument validation:
if [[ "${JSON}" == "" ]]; then
    echo "No .json file specified"
    echo "Usage: cq2fc [-v|--visual] [-c|-cnc] JSON.json"
    exit 1
fi
if [[ "${VISUAL}" == "" && "${CNC}" == "" ]]; then
    echo "Must specify least one of -c|--console and/or -v|--visual option(s)"
    exit 1
fi

# Select which FreeCAD to use:
FREECAD="freecad"
if [[ -x "freecad19" ]]; then
    FREECAD="freecad19"
fi

# Set to true to print out debugging:
if false; then
    echo "SCRIPT_DIR='${SCRIPT_DIR}'"
    echo "VISUAL='${VISUAL}'"
    echo "CNC='${CNC}'"
    echo "FLAGS='${FLAGS}'"
    echo "JSON='${JSON}'"
    echo "FREECAD='${FREECAD}'"
fi

# Notes:
# * The FreeCAD -M option adds a directory to the PYTHONPATH.
# * The FreeCAD -c option runs in console mode which can directly execute `.py` files.
# * FreeCAD without -c mode runs in visual mode which can only execute `.FCMacro` files.  Weird.
# * FreeCAD does not provide a way to pass in extra information via command line arguments.
#   So the CNC flag is passed in as an environment variable.  Crude, but effective.
if [[ "${VISUAL}" == "" ]]; then
    # Non-visual mode:
    # In this modeFreeCAD prints out lines containing "..." and "Reading Step file......"
    # for each STEP file read in.  These annoying messages are suppressed:
    echo "Non visual mode"
    FLAGS="${FLAGS}" JSON="${JSON}" \
       "${FREECAD}" -M "${SCRIPT_DIR}" -c "${SCRIPT_DIR}/CQtoFC.py" | grep -F -v "..."
else
    # Visual_mode:
    echo "Visual mode"
    FLAGS="${FLAGS}" JSON="${JSON}" \
	   "${FREECAD}" -M "${SCRIPT_DIR}" "${SCRIPT_DIR}/CQtoFC.FCMacro"
fi
